version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sealai
      POSTGRES_USER: sealai
      # Passwort kommt aus .env.dev / GitHub Secrets
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis/redis-stack-server:7.4.0-v6
    container_name: redis
    restart: unless-stopped
    ports: ["6379:6379"]
    environment:
      REDIS_ARGS: "--appendonly yes --save 900 1 --save 300 10 --save 60 10000"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:v1.15.0
    container_name: qdrant
    command: ["./entrypoint.sh"]
    restart: unless-stopped
    ports: ["6333:6333", "6334:6334"]
    volumes:
      - qdrant_storage:/qdrant/storage

  keycloak:
    build: { context: ./keycloak, dockerfile: Dockerfile }
    image: ghcr.io/jungt72/sealai-keycloak:latest
    container_name: keycloak
    depends_on: [postgres]
    restart: unless-stopped
    env_file: [.env.dev]
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/sealai
      KC_DB_USERNAME: sealai
      KC_PROXY: edge
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME: auth.sealai.net
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
    ports: ["8080:8080"]

  backend:
    image: ghcr.io/jungt72/sealai-backend:latest
    container_name: backend
    build: { context: ./backend }
    depends_on:
      postgres: { condition: service_healthy }
      redis:    { condition: service_started }
      qdrant:   { condition: service_started }
      keycloak: { condition: service_started }
    restart: unless-stopped
    env_file: [ ./.env.dev, ./backend/.env ]
    environment:
      KEYCLOAK_BASE_URL: "https://auth.sealai.net"
      KEYCLOAK_REALM: "sealAI"
      KEYCLOAK_CLIENT_ID: "nextauth"
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_ISSUER: "https://auth.sealai.net/realms/sealAI"
      KEYCLOAK_JWKS_URL: "https://auth.sealai.net/realms/sealAI/protocol/openid-connect/certs"
      KEYCLOAK_EXPECTED_AZP: "nextauth"
      KEYCLOAK_EXPECTED_AUD: "nextauth"
      BACKEND_KEYCLOAK_ISSUER: ""

      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_DB:   "sealai"
      POSTGRES_USER: "sealai"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      DATABASE_URL:      "postgresql+psycopg://sealai:${POSTGRES_PASSWORD}@postgres:5432/sealai"
      POSTGRES_SYNC_URL: "postgresql://sealai:${POSTGRES_PASSWORD}@postgres:5432/sealai"

      OPENAI_API_BASE: "https://api.openai.com/v1"
      LLM_MODEL_DEFAULT: "gpt-5-mini"
      LLM_STREAMING: "1"
      GRAPH_BUILDER: "consult"
      WS_FORCE_NATIVE: "1"
      WS_EMIT_FINAL_TEXT: "0"
      WS_STREAM_NODES: "*"
      WS_DEFAULT_ROUTE: "consult"
      WS_DEBUG_EVENTS: "1"

      ALLOWED_ORIGIN: "https://sealai.net,https://www.sealai.net"
      ALLOW_WS_ORIGIN_ANY: "0"
      ALLOW_WS_ORIGIN_EMPTY: "0"

      QDRANT_URL: "http://qdrant:6333"
      QDRANT_COLLECTION_PREFIX: "sealai-docs"
      LTM_COLLECTION: "sealai_ltm"
      LTM_EMB_MODEL: "intfloat/multilingual-e5-base"
      LTM_DISABLE_PREWARM: "1"

      EMB_MODEL_NAME: "intfloat/multilingual-e5-base"
      RERANK_MODEL_NAME: "cross-encoder/ms-marco-MiniLM-L-6-v2"
      RAG_BM25_ENABLED: "false"
      RAG_HYBRID_K: "12"
      RAG_FINAL_K: "6"
      RAG_RRF_K: "60"
      RAG_SCORE_THRESHOLD: "0.0"
      RAG_TENANT_FIELD: "tenant"

      REDIS_URL:              "redis://redis:6379/0"
      REDIS_CHECKPOINTER_URL: "redis://redis:6379/0"

    ports: ["8000:8000"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/api/v1/ping"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 30s

  frontend:
    image: ghcr.io/jungt72/sealai-frontend:latest
    container_name: frontend
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_BASE:   "${NEXT_PUBLIC_API_BASE:-https://sealai.net}"
        NEXT_PUBLIC_SITE_URL:   "${NEXT_PUBLIC_SITE_URL:-https://sealai.net}"
        NEXTAUTH_URL:           "${NEXTAUTH_URL:-https://sealai.net}"
        KEYCLOAK_ISSUER:        "${KEYCLOAK_ISSUER:-https://auth.sealai.net/realms/sealAI}"
        KEYCLOAK_CLIENT_ID:     "${KEYCLOAK_CLIENT_ID:-nextauth}"
        KEYCLOAK_CLIENT_SECRET: "${KEYCLOAK_CLIENT_SECRET}"
        NEXTAUTH_SECRET:        "${NEXTAUTH_SECRET}"
    depends_on: [backend]
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_BASE:   "${NEXT_PUBLIC_API_BASE:-https://sealai.net}"
      NEXT_PUBLIC_SITE_URL:   "${NEXT_PUBLIC_SITE_URL:-https://sealai.net}"
      NEXTAUTH_URL:           "${NEXTAUTH_URL:-https://sealai.net}"
      KEYCLOAK_ISSUER:        "${KEYCLOAK_ISSUER:-https://auth.sealai.net/realms/sealAI}"
      KEYCLOAK_CLIENT_ID:     "${KEYCLOAK_CLIENT_ID:-nextauth}"
      KEYCLOAK_CLIENT_SECRET: "${KEYCLOAK_CLIENT_SECRET}"
      NEXTAUTH_SECRET:        "${NEXTAUTH_SECRET}"
    ports: ["3000:3000"]

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      frontend: { condition: service_started }
      backend:  { condition: service_started }
      keycloak: { condition: service_started }
    restart: unless-stopped
    ports: ["80:80", "443:443"]
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/00-tuning.conf:/etc/nginx/conf.d/00-tuning.conf:ro
      - ./nginx/www:/var/www/certbot:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    healthcheck:
      test: ["CMD-SHELL", "test -s /var/run/nginx.pid || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  qdrant_storage:
  redis-data:
